/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TeachersIntegrationsImport } from './routes/teachers/integrations'
import { Route as TeachersGuidesImport } from './routes/teachers/guides'
import { Route as TeachersConceptsImport } from './routes/teachers/concepts'
import { Route as TeachersAssetsImport } from './routes/teachers/assets'
import { Route as StudentsSettingsImport } from './routes/students/settings'
import { Route as StudentsAssignmentsImport } from './routes/students/assignments'
import { Route as TeachersGuideGuideIdImport } from './routes/teachers/guide.$guideId'
import { Route as TeachersAssessmentsAssessmentIdImport } from './routes/teachers/assessments.$assessmentId'
import { Route as TeachersAnalysesAssetIdAnalysisIndexImport } from './routes/teachers/analyses.$assetId.$analysisIndex'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeachersIntegrationsRoute = TeachersIntegrationsImport.update({
  id: '/teachers/integrations',
  path: '/teachers/integrations',
  getParentRoute: () => rootRoute,
} as any)

const TeachersGuidesRoute = TeachersGuidesImport.update({
  id: '/teachers/guides',
  path: '/teachers/guides',
  getParentRoute: () => rootRoute,
} as any)

const TeachersConceptsRoute = TeachersConceptsImport.update({
  id: '/teachers/concepts',
  path: '/teachers/concepts',
  getParentRoute: () => rootRoute,
} as any)

const TeachersAssetsRoute = TeachersAssetsImport.update({
  id: '/teachers/assets',
  path: '/teachers/assets',
  getParentRoute: () => rootRoute,
} as any)

const StudentsSettingsRoute = StudentsSettingsImport.update({
  id: '/students/settings',
  path: '/students/settings',
  getParentRoute: () => rootRoute,
} as any)

const StudentsAssignmentsRoute = StudentsAssignmentsImport.update({
  id: '/students/assignments',
  path: '/students/assignments',
  getParentRoute: () => rootRoute,
} as any)

const TeachersGuideGuideIdRoute = TeachersGuideGuideIdImport.update({
  id: '/teachers/guide/$guideId',
  path: '/teachers/guide/$guideId',
  getParentRoute: () => rootRoute,
} as any)

const TeachersAssessmentsAssessmentIdRoute =
  TeachersAssessmentsAssessmentIdImport.update({
    id: '/teachers/assessments/$assessmentId',
    path: '/teachers/assessments/$assessmentId',
    getParentRoute: () => rootRoute,
  } as any)

const TeachersAnalysesAssetIdAnalysisIndexRoute =
  TeachersAnalysesAssetIdAnalysisIndexImport.update({
    id: '/teachers/analyses/$assetId/$analysisIndex',
    path: '/teachers/analyses/$assetId/$analysisIndex',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/students/assignments': {
      id: '/students/assignments'
      path: '/students/assignments'
      fullPath: '/students/assignments'
      preLoaderRoute: typeof StudentsAssignmentsImport
      parentRoute: typeof rootRoute
    }
    '/students/settings': {
      id: '/students/settings'
      path: '/students/settings'
      fullPath: '/students/settings'
      preLoaderRoute: typeof StudentsSettingsImport
      parentRoute: typeof rootRoute
    }
    '/teachers/assets': {
      id: '/teachers/assets'
      path: '/teachers/assets'
      fullPath: '/teachers/assets'
      preLoaderRoute: typeof TeachersAssetsImport
      parentRoute: typeof rootRoute
    }
    '/teachers/concepts': {
      id: '/teachers/concepts'
      path: '/teachers/concepts'
      fullPath: '/teachers/concepts'
      preLoaderRoute: typeof TeachersConceptsImport
      parentRoute: typeof rootRoute
    }
    '/teachers/guides': {
      id: '/teachers/guides'
      path: '/teachers/guides'
      fullPath: '/teachers/guides'
      preLoaderRoute: typeof TeachersGuidesImport
      parentRoute: typeof rootRoute
    }
    '/teachers/integrations': {
      id: '/teachers/integrations'
      path: '/teachers/integrations'
      fullPath: '/teachers/integrations'
      preLoaderRoute: typeof TeachersIntegrationsImport
      parentRoute: typeof rootRoute
    }
    '/teachers/assessments/$assessmentId': {
      id: '/teachers/assessments/$assessmentId'
      path: '/teachers/assessments/$assessmentId'
      fullPath: '/teachers/assessments/$assessmentId'
      preLoaderRoute: typeof TeachersAssessmentsAssessmentIdImport
      parentRoute: typeof rootRoute
    }
    '/teachers/guide/$guideId': {
      id: '/teachers/guide/$guideId'
      path: '/teachers/guide/$guideId'
      fullPath: '/teachers/guide/$guideId'
      preLoaderRoute: typeof TeachersGuideGuideIdImport
      parentRoute: typeof rootRoute
    }
    '/teachers/analyses/$assetId/$analysisIndex': {
      id: '/teachers/analyses/$assetId/$analysisIndex'
      path: '/teachers/analyses/$assetId/$analysisIndex'
      fullPath: '/teachers/analyses/$assetId/$analysisIndex'
      preLoaderRoute: typeof TeachersAnalysesAssetIdAnalysisIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/students/assignments': typeof StudentsAssignmentsRoute
  '/students/settings': typeof StudentsSettingsRoute
  '/teachers/assets': typeof TeachersAssetsRoute
  '/teachers/concepts': typeof TeachersConceptsRoute
  '/teachers/guides': typeof TeachersGuidesRoute
  '/teachers/integrations': typeof TeachersIntegrationsRoute
  '/teachers/assessments/$assessmentId': typeof TeachersAssessmentsAssessmentIdRoute
  '/teachers/guide/$guideId': typeof TeachersGuideGuideIdRoute
  '/teachers/analyses/$assetId/$analysisIndex': typeof TeachersAnalysesAssetIdAnalysisIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/students/assignments': typeof StudentsAssignmentsRoute
  '/students/settings': typeof StudentsSettingsRoute
  '/teachers/assets': typeof TeachersAssetsRoute
  '/teachers/concepts': typeof TeachersConceptsRoute
  '/teachers/guides': typeof TeachersGuidesRoute
  '/teachers/integrations': typeof TeachersIntegrationsRoute
  '/teachers/assessments/$assessmentId': typeof TeachersAssessmentsAssessmentIdRoute
  '/teachers/guide/$guideId': typeof TeachersGuideGuideIdRoute
  '/teachers/analyses/$assetId/$analysisIndex': typeof TeachersAnalysesAssetIdAnalysisIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/students/assignments': typeof StudentsAssignmentsRoute
  '/students/settings': typeof StudentsSettingsRoute
  '/teachers/assets': typeof TeachersAssetsRoute
  '/teachers/concepts': typeof TeachersConceptsRoute
  '/teachers/guides': typeof TeachersGuidesRoute
  '/teachers/integrations': typeof TeachersIntegrationsRoute
  '/teachers/assessments/$assessmentId': typeof TeachersAssessmentsAssessmentIdRoute
  '/teachers/guide/$guideId': typeof TeachersGuideGuideIdRoute
  '/teachers/analyses/$assetId/$analysisIndex': typeof TeachersAnalysesAssetIdAnalysisIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/students/assignments'
    | '/students/settings'
    | '/teachers/assets'
    | '/teachers/concepts'
    | '/teachers/guides'
    | '/teachers/integrations'
    | '/teachers/assessments/$assessmentId'
    | '/teachers/guide/$guideId'
    | '/teachers/analyses/$assetId/$analysisIndex'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/students/assignments'
    | '/students/settings'
    | '/teachers/assets'
    | '/teachers/concepts'
    | '/teachers/guides'
    | '/teachers/integrations'
    | '/teachers/assessments/$assessmentId'
    | '/teachers/guide/$guideId'
    | '/teachers/analyses/$assetId/$analysisIndex'
  id:
    | '__root__'
    | '/'
    | '/students/assignments'
    | '/students/settings'
    | '/teachers/assets'
    | '/teachers/concepts'
    | '/teachers/guides'
    | '/teachers/integrations'
    | '/teachers/assessments/$assessmentId'
    | '/teachers/guide/$guideId'
    | '/teachers/analyses/$assetId/$analysisIndex'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StudentsAssignmentsRoute: typeof StudentsAssignmentsRoute
  StudentsSettingsRoute: typeof StudentsSettingsRoute
  TeachersAssetsRoute: typeof TeachersAssetsRoute
  TeachersConceptsRoute: typeof TeachersConceptsRoute
  TeachersGuidesRoute: typeof TeachersGuidesRoute
  TeachersIntegrationsRoute: typeof TeachersIntegrationsRoute
  TeachersAssessmentsAssessmentIdRoute: typeof TeachersAssessmentsAssessmentIdRoute
  TeachersGuideGuideIdRoute: typeof TeachersGuideGuideIdRoute
  TeachersAnalysesAssetIdAnalysisIndexRoute: typeof TeachersAnalysesAssetIdAnalysisIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StudentsAssignmentsRoute: StudentsAssignmentsRoute,
  StudentsSettingsRoute: StudentsSettingsRoute,
  TeachersAssetsRoute: TeachersAssetsRoute,
  TeachersConceptsRoute: TeachersConceptsRoute,
  TeachersGuidesRoute: TeachersGuidesRoute,
  TeachersIntegrationsRoute: TeachersIntegrationsRoute,
  TeachersAssessmentsAssessmentIdRoute: TeachersAssessmentsAssessmentIdRoute,
  TeachersGuideGuideIdRoute: TeachersGuideGuideIdRoute,
  TeachersAnalysesAssetIdAnalysisIndexRoute:
    TeachersAnalysesAssetIdAnalysisIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/students/assignments",
        "/students/settings",
        "/teachers/assets",
        "/teachers/concepts",
        "/teachers/guides",
        "/teachers/integrations",
        "/teachers/assessments/$assessmentId",
        "/teachers/guide/$guideId",
        "/teachers/analyses/$assetId/$analysisIndex"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/students/assignments": {
      "filePath": "students/assignments.tsx"
    },
    "/students/settings": {
      "filePath": "students/settings.tsx"
    },
    "/teachers/assets": {
      "filePath": "teachers/assets.tsx"
    },
    "/teachers/concepts": {
      "filePath": "teachers/concepts.tsx"
    },
    "/teachers/guides": {
      "filePath": "teachers/guides.tsx"
    },
    "/teachers/integrations": {
      "filePath": "teachers/integrations.tsx"
    },
    "/teachers/assessments/$assessmentId": {
      "filePath": "teachers/assessments.$assessmentId.tsx"
    },
    "/teachers/guide/$guideId": {
      "filePath": "teachers/guide.$guideId.tsx"
    },
    "/teachers/analyses/$assetId/$analysisIndex": {
      "filePath": "teachers/analyses.$assetId.$analysisIndex.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
